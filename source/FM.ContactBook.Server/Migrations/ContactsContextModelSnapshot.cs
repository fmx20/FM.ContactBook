// <auto-generated />
using System;
using FM.ContactBook.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FM.ContactBook.Server.Migrations
{
    [DbContext(typeof(ContactsContext))]
    partial class ContactsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("FM.ContactBook.Server.Dto.ContactDto", b =>
                {
                    b.Property<long>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("IBAN");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ContactId");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("FM.ContactBook.Server.Dto.UserDto", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Forename")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FM.ContactBook.Server.Dto.ContactDto", b =>
                {
                    b.OwnsOne("FM.ContactBook.Server.Dto.ContactAddressDto", "Address", b1 =>
                        {
                            b1.Property<long>("ContactDtoContactId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Country")
                                .HasColumnType("TEXT");

                            b1.Property<string>("District")
                                .HasColumnType("TEXT");

                            b1.Property<long?>("HouseNumber")
                                .HasColumnType("INTEGER");

                            b1.Property<long?>("PostCode")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Street")
                                .HasColumnType("TEXT");

                            b1.HasKey("ContactDtoContactId");

                            b1.ToTable("Contact");

                            b1.WithOwner()
                                .HasForeignKey("ContactDtoContactId");
                        });

                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
